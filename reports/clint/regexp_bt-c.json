["src/nvim/regexp_bt.c", ["", "/*", " *"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * The \"internal use only\" fields in regexp_defs.h are present to pass info from"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Structure for regexp \"program\".  This is essentially a linear encoding"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * The opcodes are:"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Flags to be passed up and down."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * When regcode is set to this value, code is not emitted and size is computed"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Structure used to save the current input state, when it needs to be"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * When there are alternatives a regstate_T is put on the regstack to remember"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * \"regstack\" and \"backpos\" are used by regmatch().  They are kept over calls"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Both for regstack and backpos tables we use the following strategy of"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Opcode notes:"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * A node is one char of opcode followed by two chars of \"next\" pointer."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Setup to parse the regexp.  Used once to get the length and once to do it."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Emit (if appropriate) a byte of code"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Emit (if appropriate) a multi-byte character of code"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Produce the bytes for equivalence class \"c\"."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["    case 0x1eb6:", "      regmbc('A'); regmbc(0xc0); regmbc(0xc1); regmbc(0xc2);", "      regmbc(0xc3); regmbc(0xc4); regmbc(0xc5);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('A'); regmbc(0xc0); regmbc(0xc1); regmbc(0xc2);", "      regmbc(0xc3); regmbc(0xc4); regmbc(0xc5);", "      regmbc(0x100); regmbc(0x102); regmbc(0x104);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xc3); regmbc(0xc4); regmbc(0xc5);", "      regmbc(0x100); regmbc(0x102); regmbc(0x104);", "      regmbc(0x1cd); regmbc(0x1de); regmbc(0x1e0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x100); regmbc(0x102); regmbc(0x104);", "      regmbc(0x1cd); regmbc(0x1de); regmbc(0x1e0);", "      regmbc(0x1fa); regmbc(0x202); regmbc(0x226);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1cd); regmbc(0x1de); regmbc(0x1e0);", "      regmbc(0x1fa); regmbc(0x202); regmbc(0x226);", "      regmbc(0x23a); regmbc(0x1e00); regmbc(0x1ea0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1fa); regmbc(0x202); regmbc(0x226);", "      regmbc(0x23a); regmbc(0x1e00); regmbc(0x1ea0);", "      regmbc(0x1ea2); regmbc(0x1ea4); regmbc(0x1ea6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x23a); regmbc(0x1e00); regmbc(0x1ea0);", "      regmbc(0x1ea2); regmbc(0x1ea4); regmbc(0x1ea6);", "      regmbc(0x1ea8); regmbc(0x1eaa); regmbc(0x1eac);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ea2); regmbc(0x1ea4); regmbc(0x1ea6);", "      regmbc(0x1ea8); regmbc(0x1eaa); regmbc(0x1eac);", "      regmbc(0x1eae); regmbc(0x1eb0); regmbc(0x1eb2);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ea8); regmbc(0x1eaa); regmbc(0x1eac);", "      regmbc(0x1eae); regmbc(0x1eb0); regmbc(0x1eb2);", "      regmbc(0x1eb4); regmbc(0x1eb6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1eae); regmbc(0x1eb0); regmbc(0x1eb2);", "      regmbc(0x1eb4); regmbc(0x1eb6);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('B');", "      regmbc(0x181); regmbc(0x243); regmbc(0x1e02);", "      regmbc(0x1e04); regmbc(0x1e06);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x181); regmbc(0x243); regmbc(0x1e02);", "      regmbc(0x1e04); regmbc(0x1e06);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa792:", "      regmbc('C'); regmbc(0xc7);", "      regmbc(0x106); regmbc(0x108); regmbc(0x10a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('C'); regmbc(0xc7);", "      regmbc(0x106); regmbc(0x108); regmbc(0x10a);", "      regmbc(0x10c); regmbc(0x187); regmbc(0x23b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x106); regmbc(0x108); regmbc(0x10a);", "      regmbc(0x10c); regmbc(0x187); regmbc(0x23b);", "      regmbc(0x1e08); regmbc(0xa792);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x10c); regmbc(0x187); regmbc(0x23b);", "      regmbc(0x1e08); regmbc(0xa792);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e12:", "      regmbc('D'); regmbc(0x10e); regmbc(0x110);", "      regmbc(0x18a); regmbc(0x1e0a); regmbc(0x1e0c);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('D'); regmbc(0x10e); regmbc(0x110);", "      regmbc(0x18a); regmbc(0x1e0a); regmbc(0x1e0c);", "      regmbc(0x1e0e); regmbc(0x1e10); regmbc(0x1e12);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x18a); regmbc(0x1e0a); regmbc(0x1e0c);", "      regmbc(0x1e0e); regmbc(0x1e10); regmbc(0x1e12);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ec6:", "      regmbc('E'); regmbc(0xc8); regmbc(0xc9);", "      regmbc(0xca); regmbc(0xcb); regmbc(0x112);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('E'); regmbc(0xc8); regmbc(0xc9);", "      regmbc(0xca); regmbc(0xcb); regmbc(0x112);", "      regmbc(0x114); regmbc(0x116); regmbc(0x118);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xca); regmbc(0xcb); regmbc(0x112);", "      regmbc(0x114); regmbc(0x116); regmbc(0x118);", "      regmbc(0x11a); regmbc(0x204); regmbc(0x206);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x114); regmbc(0x116); regmbc(0x118);", "      regmbc(0x11a); regmbc(0x204); regmbc(0x206);", "      regmbc(0x228); regmbc(0x246); regmbc(0x1e14);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x11a); regmbc(0x204); regmbc(0x206);", "      regmbc(0x228); regmbc(0x246); regmbc(0x1e14);", "      regmbc(0x1e16); regmbc(0x1e18); regmbc(0x1e1a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x228); regmbc(0x246); regmbc(0x1e14);", "      regmbc(0x1e16); regmbc(0x1e18); regmbc(0x1e1a);", "      regmbc(0x1e1c); regmbc(0x1eb8); regmbc(0x1eba);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e16); regmbc(0x1e18); regmbc(0x1e1a);", "      regmbc(0x1e1c); regmbc(0x1eb8); regmbc(0x1eba);", "      regmbc(0x1ebc); regmbc(0x1ebe); regmbc(0x1ec0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e1c); regmbc(0x1eb8); regmbc(0x1eba);", "      regmbc(0x1ebc); regmbc(0x1ebe); regmbc(0x1ec0);", "      regmbc(0x1ec2); regmbc(0x1ec4); regmbc(0x1ec6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ebc); regmbc(0x1ebe); regmbc(0x1ec0);", "      regmbc(0x1ec2); regmbc(0x1ec4); regmbc(0x1ec6);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa798:", "      regmbc('F'); regmbc(0x191); regmbc(0x1e1e);", "      regmbc(0xa798);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a0:", "      regmbc('G'); regmbc(0x11c); regmbc(0x11e);", "      regmbc(0x120); regmbc(0x122); regmbc(0x193);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('G'); regmbc(0x11c); regmbc(0x11e);", "      regmbc(0x120); regmbc(0x122); regmbc(0x193);", "      regmbc(0x1e4); regmbc(0x1e6); regmbc(0x1f4);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x120); regmbc(0x122); regmbc(0x193);", "      regmbc(0x1e4); regmbc(0x1e6); regmbc(0x1f4);", "      regmbc(0x1e20); regmbc(0xa7a0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e4); regmbc(0x1e6); regmbc(0x1f4);", "      regmbc(0x1e20); regmbc(0xa7a0);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c67:", "      regmbc('H'); regmbc(0x124); regmbc(0x126);", "      regmbc(0x21e); regmbc(0x1e22); regmbc(0x1e24);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('H'); regmbc(0x124); regmbc(0x126);", "      regmbc(0x21e); regmbc(0x1e22); regmbc(0x1e24);", "      regmbc(0x1e26); regmbc(0x1e28); regmbc(0x1e2a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x21e); regmbc(0x1e22); regmbc(0x1e24);", "      regmbc(0x1e26); regmbc(0x1e28); regmbc(0x1e2a);", "      regmbc(0x2c67);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1eca:", "      regmbc('I'); regmbc(0xcc); regmbc(0xcd);", "      regmbc(0xce); regmbc(0xcf); regmbc(0x128);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('I'); regmbc(0xcc); regmbc(0xcd);", "      regmbc(0xce); regmbc(0xcf); regmbc(0x128);", "      regmbc(0x12a); regmbc(0x12c); regmbc(0x12e);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xce); regmbc(0xcf); regmbc(0x128);", "      regmbc(0x12a); regmbc(0x12c); regmbc(0x12e);", "      regmbc(0x130); regmbc(0x197); regmbc(0x1cf);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x12a); regmbc(0x12c); regmbc(0x12e);", "      regmbc(0x130); regmbc(0x197); regmbc(0x1cf);", "      regmbc(0x208); regmbc(0x20a); regmbc(0x1e2c);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x130); regmbc(0x197); regmbc(0x1cf);", "      regmbc(0x208); regmbc(0x20a); regmbc(0x1e2c);", "      regmbc(0x1e2e); regmbc(0x1ec8); regmbc(0x1eca);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x208); regmbc(0x20a); regmbc(0x1e2c);", "      regmbc(0x1e2e); regmbc(0x1ec8); regmbc(0x1eca);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x248:", "      regmbc('J'); regmbc(0x134); regmbc(0x248);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa740:", "      regmbc('K'); regmbc(0x136); regmbc(0x198);", "      regmbc(0x1e8); regmbc(0x1e30); regmbc(0x1e32);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('K'); regmbc(0x136); regmbc(0x198);", "      regmbc(0x1e8); regmbc(0x1e30); regmbc(0x1e32);", "      regmbc(0x1e34); regmbc(0x2c69); regmbc(0xa740);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e8); regmbc(0x1e30); regmbc(0x1e32);", "      regmbc(0x1e34); regmbc(0x2c69); regmbc(0xa740);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c60:", "      regmbc('L'); regmbc(0x139); regmbc(0x13b);", "      regmbc(0x13d); regmbc(0x13f); regmbc(0x141);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('L'); regmbc(0x139); regmbc(0x13b);", "      regmbc(0x13d); regmbc(0x13f); regmbc(0x141);", "      regmbc(0x23d); regmbc(0x1e36); regmbc(0x1e38);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x13d); regmbc(0x13f); regmbc(0x141);", "      regmbc(0x23d); regmbc(0x1e36); regmbc(0x1e38);", "      regmbc(0x1e3a); regmbc(0x1e3c); regmbc(0x2c60);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x23d); regmbc(0x1e36); regmbc(0x1e38);", "      regmbc(0x1e3a); regmbc(0x1e3c); regmbc(0x2c60);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e42:", "      regmbc('M'); regmbc(0x1e3e); regmbc(0x1e40);", "      regmbc(0x1e42);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a4:", "      regmbc('N'); regmbc(0xd1);", "      regmbc(0x143); regmbc(0x145); regmbc(0x147);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('N'); regmbc(0xd1);", "      regmbc(0x143); regmbc(0x145); regmbc(0x147);", "      regmbc(0x1f8); regmbc(0x1e44); regmbc(0x1e46);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x143); regmbc(0x145); regmbc(0x147);", "      regmbc(0x1f8); regmbc(0x1e44); regmbc(0x1e46);", "      regmbc(0x1e48); regmbc(0x1e4a); regmbc(0xa7a4);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1f8); regmbc(0x1e44); regmbc(0x1e46);", "      regmbc(0x1e48); regmbc(0x1e4a); regmbc(0xa7a4);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ee2:", "      regmbc('O'); regmbc(0xd2); regmbc(0xd3); regmbc(0xd4);", "      regmbc(0xd5); regmbc(0xd6); regmbc(0xd8);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('O'); regmbc(0xd2); regmbc(0xd3); regmbc(0xd4);", "      regmbc(0xd5); regmbc(0xd6); regmbc(0xd8);", "      regmbc(0x14c); regmbc(0x14e); regmbc(0x150);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xd5); regmbc(0xd6); regmbc(0xd8);", "      regmbc(0x14c); regmbc(0x14e); regmbc(0x150);", "      regmbc(0x19f); regmbc(0x1a0); regmbc(0x1d1);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x14c); regmbc(0x14e); regmbc(0x150);", "      regmbc(0x19f); regmbc(0x1a0); regmbc(0x1d1);", "      regmbc(0x1ea); regmbc(0x1ec); regmbc(0x1fe);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x19f); regmbc(0x1a0); regmbc(0x1d1);", "      regmbc(0x1ea); regmbc(0x1ec); regmbc(0x1fe);", "      regmbc(0x20c); regmbc(0x20e); regmbc(0x22a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ea); regmbc(0x1ec); regmbc(0x1fe);", "      regmbc(0x20c); regmbc(0x20e); regmbc(0x22a);", "      regmbc(0x22c); regmbc(0x22e); regmbc(0x230);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x20c); regmbc(0x20e); regmbc(0x22a);", "      regmbc(0x22c); regmbc(0x22e); regmbc(0x230);", "      regmbc(0x1e4c); regmbc(0x1e4e); regmbc(0x1e50);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x22c); regmbc(0x22e); regmbc(0x230);", "      regmbc(0x1e4c); regmbc(0x1e4e); regmbc(0x1e50);", "      regmbc(0x1e52); regmbc(0x1ecc); regmbc(0x1ece);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e4c); regmbc(0x1e4e); regmbc(0x1e50);", "      regmbc(0x1e52); regmbc(0x1ecc); regmbc(0x1ece);", "      regmbc(0x1ed0); regmbc(0x1ed2); regmbc(0x1ed4);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e52); regmbc(0x1ecc); regmbc(0x1ece);", "      regmbc(0x1ed0); regmbc(0x1ed2); regmbc(0x1ed4);", "      regmbc(0x1ed6); regmbc(0x1ed8); regmbc(0x1eda);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ed0); regmbc(0x1ed2); regmbc(0x1ed4);", "      regmbc(0x1ed6); regmbc(0x1ed8); regmbc(0x1eda);", "      regmbc(0x1edc); regmbc(0x1ede); regmbc(0x1ee0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ed6); regmbc(0x1ed8); regmbc(0x1eda);", "      regmbc(0x1edc); regmbc(0x1ede); regmbc(0x1ee0);", "      regmbc(0x1ee2);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c63:", "      regmbc('P'); regmbc(0x1a4); regmbc(0x1e54);", "      regmbc(0x1e56); regmbc(0x2c63);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('P'); regmbc(0x1a4); regmbc(0x1e54);", "      regmbc(0x1e56); regmbc(0x2c63);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x24a:", "      regmbc('Q'); regmbc(0x24a);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a6:", "      regmbc('R'); regmbc(0x154); regmbc(0x156);", "      regmbc(0x210); regmbc(0x212); regmbc(0x158);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('R'); regmbc(0x154); regmbc(0x156);", "      regmbc(0x210); regmbc(0x212); regmbc(0x158);", "      regmbc(0x24c); regmbc(0x1e58); regmbc(0x1e5a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x210); regmbc(0x212); regmbc(0x158);", "      regmbc(0x24c); regmbc(0x1e58); regmbc(0x1e5a);", "      regmbc(0x1e5c); regmbc(0x1e5e); regmbc(0x2c64);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x24c); regmbc(0x1e58); regmbc(0x1e5a);", "      regmbc(0x1e5c); regmbc(0x1e5e); regmbc(0x2c64);", "      regmbc(0xa7a6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a8:", "      regmbc('S'); regmbc(0x15a); regmbc(0x15c);", "      regmbc(0x15e); regmbc(0x160); regmbc(0x218);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('S'); regmbc(0x15a); regmbc(0x15c);", "      regmbc(0x15e); regmbc(0x160); regmbc(0x218);", "      regmbc(0x1e60); regmbc(0x1e62); regmbc(0x1e64);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x15e); regmbc(0x160); regmbc(0x218);", "      regmbc(0x1e60); regmbc(0x1e62); regmbc(0x1e64);", "      regmbc(0x1e66); regmbc(0x1e68); regmbc(0x2c7e);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e60); regmbc(0x1e62); regmbc(0x1e64);", "      regmbc(0x1e66); regmbc(0x1e68); regmbc(0x2c7e);", "      regmbc(0xa7a8);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e70:", "      regmbc('T'); regmbc(0x162); regmbc(0x164);", "      regmbc(0x166); regmbc(0x1ac); regmbc(0x23e);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('T'); regmbc(0x162); regmbc(0x164);", "      regmbc(0x166); regmbc(0x1ac); regmbc(0x23e);", "      regmbc(0x1ae); regmbc(0x21a); regmbc(0x1e6a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x166); regmbc(0x1ac); regmbc(0x23e);", "      regmbc(0x1ae); regmbc(0x21a); regmbc(0x1e6a);", "      regmbc(0x1e6c); regmbc(0x1e6e); regmbc(0x1e70);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ae); regmbc(0x21a); regmbc(0x1e6a);", "      regmbc(0x1e6c); regmbc(0x1e6e); regmbc(0x1e70);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ef0:", "      regmbc('U'); regmbc(0xd9); regmbc(0xda);", "      regmbc(0xdb); regmbc(0xdc); regmbc(0x168);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('U'); regmbc(0xd9); regmbc(0xda);", "      regmbc(0xdb); regmbc(0xdc); regmbc(0x168);", "      regmbc(0x16a); regmbc(0x16c); regmbc(0x16e);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xdb); regmbc(0xdc); regmbc(0x168);", "      regmbc(0x16a); regmbc(0x16c); regmbc(0x16e);", "      regmbc(0x170); regmbc(0x172); regmbc(0x1af);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x16a); regmbc(0x16c); regmbc(0x16e);", "      regmbc(0x170); regmbc(0x172); regmbc(0x1af);", "      regmbc(0x1d3); regmbc(0x1d5); regmbc(0x1d7);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x170); regmbc(0x172); regmbc(0x1af);", "      regmbc(0x1d3); regmbc(0x1d5); regmbc(0x1d7);", "      regmbc(0x1d9); regmbc(0x1db); regmbc(0x214);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d3); regmbc(0x1d5); regmbc(0x1d7);", "      regmbc(0x1d9); regmbc(0x1db); regmbc(0x214);", "      regmbc(0x216); regmbc(0x244); regmbc(0x1e72);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d9); regmbc(0x1db); regmbc(0x214);", "      regmbc(0x216); regmbc(0x244); regmbc(0x1e72);", "      regmbc(0x1e74); regmbc(0x1e76); regmbc(0x1e78);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x216); regmbc(0x244); regmbc(0x1e72);", "      regmbc(0x1e74); regmbc(0x1e76); regmbc(0x1e78);", "      regmbc(0x1e7a); regmbc(0x1ee4); regmbc(0x1ee6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e74); regmbc(0x1e76); regmbc(0x1e78);", "      regmbc(0x1e7a); regmbc(0x1ee4); regmbc(0x1ee6);", "      regmbc(0x1ee8); regmbc(0x1eea); regmbc(0x1eec);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e7a); regmbc(0x1ee4); regmbc(0x1ee6);", "      regmbc(0x1ee8); regmbc(0x1eea); regmbc(0x1eec);", "      regmbc(0x1eee); regmbc(0x1ef0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ee8); regmbc(0x1eea); regmbc(0x1eec);", "      regmbc(0x1eee); regmbc(0x1ef0);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e7e:", "      regmbc('V'); regmbc(0x1b2); regmbc(0x1e7c);", "      regmbc(0x1e7e);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e88:", "      regmbc('W'); regmbc(0x174); regmbc(0x1e80);", "      regmbc(0x1e82); regmbc(0x1e84); regmbc(0x1e86);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('W'); regmbc(0x174); regmbc(0x1e80);", "      regmbc(0x1e82); regmbc(0x1e84); regmbc(0x1e86);", "      regmbc(0x1e88);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e8c:", "      regmbc('X'); regmbc(0x1e8a); regmbc(0x1e8c);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ef8:", "      regmbc('Y'); regmbc(0xdd); regmbc(0x176);", "      regmbc(0x178); regmbc(0x1b3); regmbc(0x232);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('Y'); regmbc(0xdd); regmbc(0x176);", "      regmbc(0x178); regmbc(0x1b3); regmbc(0x232);", "      regmbc(0x24e); regmbc(0x1e8e); regmbc(0x1ef2);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x178); regmbc(0x1b3); regmbc(0x232);", "      regmbc(0x24e); regmbc(0x1e8e); regmbc(0x1ef2);", "      regmbc(0x1ef4); regmbc(0x1ef6); regmbc(0x1ef8);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x24e); regmbc(0x1e8e); regmbc(0x1ef2);", "      regmbc(0x1ef4); regmbc(0x1ef6); regmbc(0x1ef8);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c6b:", "      regmbc('Z'); regmbc(0x179); regmbc(0x17b);", "      regmbc(0x17d); regmbc(0x1b5); regmbc(0x1e90);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('Z'); regmbc(0x179); regmbc(0x17b);", "      regmbc(0x17d); regmbc(0x1b5); regmbc(0x1e90);", "      regmbc(0x1e92); regmbc(0x1e94); regmbc(0x2c6b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x17d); regmbc(0x1b5); regmbc(0x1e90);", "      regmbc(0x1e92); regmbc(0x1e94); regmbc(0x2c6b);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c65:", "      regmbc('a'); regmbc(0xe0); regmbc(0xe1);", "      regmbc(0xe2); regmbc(0xe3); regmbc(0xe4);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('a'); regmbc(0xe0); regmbc(0xe1);", "      regmbc(0xe2); regmbc(0xe3); regmbc(0xe4);", "      regmbc(0xe5); regmbc(0x101); regmbc(0x103);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xe2); regmbc(0xe3); regmbc(0xe4);", "      regmbc(0xe5); regmbc(0x101); regmbc(0x103);", "      regmbc(0x105); regmbc(0x1ce); regmbc(0x1df);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xe5); regmbc(0x101); regmbc(0x103);", "      regmbc(0x105); regmbc(0x1ce); regmbc(0x1df);", "      regmbc(0x1e1); regmbc(0x1fb); regmbc(0x201);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x105); regmbc(0x1ce); regmbc(0x1df);", "      regmbc(0x1e1); regmbc(0x1fb); regmbc(0x201);", "      regmbc(0x203); regmbc(0x227); regmbc(0x1d8f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e1); regmbc(0x1fb); regmbc(0x201);", "      regmbc(0x203); regmbc(0x227); regmbc(0x1d8f);", "      regmbc(0x1e01); regmbc(0x1e9a); regmbc(0x1ea1);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x203); regmbc(0x227); regmbc(0x1d8f);", "      regmbc(0x1e01); regmbc(0x1e9a); regmbc(0x1ea1);", "      regmbc(0x1ea3); regmbc(0x1ea5); regmbc(0x1ea7);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e01); regmbc(0x1e9a); regmbc(0x1ea1);", "      regmbc(0x1ea3); regmbc(0x1ea5); regmbc(0x1ea7);", "      regmbc(0x1ea9); regmbc(0x1eab); regmbc(0x1ead);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ea3); regmbc(0x1ea5); regmbc(0x1ea7);", "      regmbc(0x1ea9); regmbc(0x1eab); regmbc(0x1ead);", "      regmbc(0x1eaf); regmbc(0x1eb1); regmbc(0x1eb3);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ea9); regmbc(0x1eab); regmbc(0x1ead);", "      regmbc(0x1eaf); regmbc(0x1eb1); regmbc(0x1eb3);", "      regmbc(0x1eb5); regmbc(0x1eb7); regmbc(0x2c65);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1eaf); regmbc(0x1eb1); regmbc(0x1eb3);", "      regmbc(0x1eb5); regmbc(0x1eb7); regmbc(0x2c65);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('b');", "      regmbc(0x180); regmbc(0x253); regmbc(0x1d6c);", "      regmbc(0x1d80); regmbc(0x1e03); regmbc(0x1e05);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x180); regmbc(0x253); regmbc(0x1d6c);", "      regmbc(0x1d80); regmbc(0x1e03); regmbc(0x1e05);", "      regmbc(0x1e07);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa794:", "      regmbc('c'); regmbc(0xe7); regmbc(0x107);", "      regmbc(0x109); regmbc(0x10b); regmbc(0x10d);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('c'); regmbc(0xe7); regmbc(0x107);", "      regmbc(0x109); regmbc(0x10b); regmbc(0x10d);", "      regmbc(0x188); regmbc(0x23c); regmbc(0x1e09);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x109); regmbc(0x10b); regmbc(0x10d);", "      regmbc(0x188); regmbc(0x23c); regmbc(0x1e09);", "      regmbc(0xa793); regmbc(0xa794);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x188); regmbc(0x23c); regmbc(0x1e09);", "      regmbc(0xa793); regmbc(0xa794);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e13:", "      regmbc('d'); regmbc(0x10f); regmbc(0x111);", "      regmbc(0x257); regmbc(0x1d6d); regmbc(0x1d81);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('d'); regmbc(0x10f); regmbc(0x111);", "      regmbc(0x257); regmbc(0x1d6d); regmbc(0x1d81);", "      regmbc(0x1d91); regmbc(0x1e0b); regmbc(0x1e0d);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x257); regmbc(0x1d6d); regmbc(0x1d81);", "      regmbc(0x1d91); regmbc(0x1e0b); regmbc(0x1e0d);", "      regmbc(0x1e0f); regmbc(0x1e11); regmbc(0x1e13);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d91); regmbc(0x1e0b); regmbc(0x1e0d);", "      regmbc(0x1e0f); regmbc(0x1e11); regmbc(0x1e13);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ec7:", "      regmbc('e'); regmbc(0xe8); regmbc(0xe9);", "      regmbc(0xea); regmbc(0xeb); regmbc(0x113);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('e'); regmbc(0xe8); regmbc(0xe9);", "      regmbc(0xea); regmbc(0xeb); regmbc(0x113);", "      regmbc(0x115); regmbc(0x117); regmbc(0x119);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xea); regmbc(0xeb); regmbc(0x113);", "      regmbc(0x115); regmbc(0x117); regmbc(0x119);", "      regmbc(0x11b); regmbc(0x205); regmbc(0x207);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x115); regmbc(0x117); regmbc(0x119);", "      regmbc(0x11b); regmbc(0x205); regmbc(0x207);", "      regmbc(0x229); regmbc(0x247); regmbc(0x1d92);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x11b); regmbc(0x205); regmbc(0x207);", "      regmbc(0x229); regmbc(0x247); regmbc(0x1d92);", "      regmbc(0x1e15); regmbc(0x1e17); regmbc(0x1e19);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x229); regmbc(0x247); regmbc(0x1d92);", "      regmbc(0x1e15); regmbc(0x1e17); regmbc(0x1e19);", "      regmbc(0x1e1b); regmbc(0x1e1d); regmbc(0x1eb9);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e15); regmbc(0x1e17); regmbc(0x1e19);", "      regmbc(0x1e1b); regmbc(0x1e1d); regmbc(0x1eb9);", "      regmbc(0x1ebb); regmbc(0x1ebd); regmbc(0x1ebf);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e1b); regmbc(0x1e1d); regmbc(0x1eb9);", "      regmbc(0x1ebb); regmbc(0x1ebd); regmbc(0x1ebf);", "      regmbc(0x1ec1); regmbc(0x1ec3); regmbc(0x1ec5);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ebb); regmbc(0x1ebd); regmbc(0x1ebf);", "      regmbc(0x1ec1); regmbc(0x1ec3); regmbc(0x1ec5);", "      regmbc(0x1ec7);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa799:", "      regmbc('f'); regmbc(0x192); regmbc(0x1d6e);", "      regmbc(0x1d82); regmbc(0x1e1f); regmbc(0xa799);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('f'); regmbc(0x192); regmbc(0x1d6e);", "      regmbc(0x1d82); regmbc(0x1e1f); regmbc(0xa799);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a1:", "      regmbc('g'); regmbc(0x11d); regmbc(0x11f);", "      regmbc(0x121); regmbc(0x123); regmbc(0x1e5);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('g'); regmbc(0x11d); regmbc(0x11f);", "      regmbc(0x121); regmbc(0x123); regmbc(0x1e5);", "      regmbc(0x1e7); regmbc(0x1f5); regmbc(0x260);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x121); regmbc(0x123); regmbc(0x1e5);", "      regmbc(0x1e7); regmbc(0x1f5); regmbc(0x260);", "      regmbc(0x1d83); regmbc(0x1e21); regmbc(0xa7a1);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e7); regmbc(0x1f5); regmbc(0x260);", "      regmbc(0x1d83); regmbc(0x1e21); regmbc(0xa7a1);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa795:", "      regmbc('h'); regmbc(0x125); regmbc(0x127);", "      regmbc(0x21f); regmbc(0x1e23); regmbc(0x1e25);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('h'); regmbc(0x125); regmbc(0x127);", "      regmbc(0x21f); regmbc(0x1e23); regmbc(0x1e25);", "      regmbc(0x1e27); regmbc(0x1e29); regmbc(0x1e2b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x21f); regmbc(0x1e23); regmbc(0x1e25);", "      regmbc(0x1e27); regmbc(0x1e29); regmbc(0x1e2b);", "      regmbc(0x1e96); regmbc(0x2c68); regmbc(0xa795);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e27); regmbc(0x1e29); regmbc(0x1e2b);", "      regmbc(0x1e96); regmbc(0x2c68); regmbc(0xa795);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ecb:", "      regmbc('i'); regmbc(0xec); regmbc(0xed);", "      regmbc(0xee); regmbc(0xef); regmbc(0x129);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('i'); regmbc(0xec); regmbc(0xed);", "      regmbc(0xee); regmbc(0xef); regmbc(0x129);", "      regmbc(0x12b); regmbc(0x12d); regmbc(0x12f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xee); regmbc(0xef); regmbc(0x129);", "      regmbc(0x12b); regmbc(0x12d); regmbc(0x12f);", "      regmbc(0x1d0); regmbc(0x209); regmbc(0x20b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x12b); regmbc(0x12d); regmbc(0x12f);", "      regmbc(0x1d0); regmbc(0x209); regmbc(0x20b);", "      regmbc(0x268); regmbc(0x1d96); regmbc(0x1e2d);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d0); regmbc(0x209); regmbc(0x20b);", "      regmbc(0x268); regmbc(0x1d96); regmbc(0x1e2d);", "      regmbc(0x1e2f); regmbc(0x1ec9); regmbc(0x1ecb);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x268); regmbc(0x1d96); regmbc(0x1e2d);", "      regmbc(0x1e2f); regmbc(0x1ec9); regmbc(0x1ecb);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x249:", "      regmbc('j'); regmbc(0x135); regmbc(0x1f0);", "      regmbc(0x249);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa741:", "      regmbc('k'); regmbc(0x137); regmbc(0x199);", "      regmbc(0x1e9); regmbc(0x1d84); regmbc(0x1e31);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('k'); regmbc(0x137); regmbc(0x199);", "      regmbc(0x1e9); regmbc(0x1d84); regmbc(0x1e31);", "      regmbc(0x1e33); regmbc(0x1e35); regmbc(0x2c6a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e9); regmbc(0x1d84); regmbc(0x1e31);", "      regmbc(0x1e33); regmbc(0x1e35); regmbc(0x2c6a);", "      regmbc(0xa741);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c61:", "      regmbc('l'); regmbc(0x13a); regmbc(0x13c);", "      regmbc(0x13e); regmbc(0x140); regmbc(0x142);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('l'); regmbc(0x13a); regmbc(0x13c);", "      regmbc(0x13e); regmbc(0x140); regmbc(0x142);", "      regmbc(0x19a); regmbc(0x1e37); regmbc(0x1e39);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x13e); regmbc(0x140); regmbc(0x142);", "      regmbc(0x19a); regmbc(0x1e37); regmbc(0x1e39);", "      regmbc(0x1e3b); regmbc(0x1e3d); regmbc(0x2c61);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x19a); regmbc(0x1e37); regmbc(0x1e39);", "      regmbc(0x1e3b); regmbc(0x1e3d); regmbc(0x2c61);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e43:", "      regmbc('m'); regmbc(0x1d6f); regmbc(0x1e3f);", "      regmbc(0x1e41); regmbc(0x1e43);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('m'); regmbc(0x1d6f); regmbc(0x1e3f);", "      regmbc(0x1e41); regmbc(0x1e43);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a5:", "      regmbc('n'); regmbc(0xf1); regmbc(0x144);", "      regmbc(0x146); regmbc(0x148); regmbc(0x149);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('n'); regmbc(0xf1); regmbc(0x144);", "      regmbc(0x146); regmbc(0x148); regmbc(0x149);", "      regmbc(0x1f9); regmbc(0x1d70); regmbc(0x1d87);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x146); regmbc(0x148); regmbc(0x149);", "      regmbc(0x1f9); regmbc(0x1d70); regmbc(0x1d87);", "      regmbc(0x1e45); regmbc(0x1e47); regmbc(0x1e49);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1f9); regmbc(0x1d70); regmbc(0x1d87);", "      regmbc(0x1e45); regmbc(0x1e47); regmbc(0x1e49);", "      regmbc(0x1e4b); regmbc(0xa7a5);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e45); regmbc(0x1e47); regmbc(0x1e49);", "      regmbc(0x1e4b); regmbc(0xa7a5);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ee3:", "      regmbc('o'); regmbc(0xf2); regmbc(0xf3);", "      regmbc(0xf4); regmbc(0xf5); regmbc(0xf6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('o'); regmbc(0xf2); regmbc(0xf3);", "      regmbc(0xf4); regmbc(0xf5); regmbc(0xf6);", "      regmbc(0xf8); regmbc(0x14d); regmbc(0x14f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xf4); regmbc(0xf5); regmbc(0xf6);", "      regmbc(0xf8); regmbc(0x14d); regmbc(0x14f);", "      regmbc(0x151); regmbc(0x1a1); regmbc(0x1d2);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xf8); regmbc(0x14d); regmbc(0x14f);", "      regmbc(0x151); regmbc(0x1a1); regmbc(0x1d2);", "      regmbc(0x1eb); regmbc(0x1ed); regmbc(0x1ff);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x151); regmbc(0x1a1); regmbc(0x1d2);", "      regmbc(0x1eb); regmbc(0x1ed); regmbc(0x1ff);", "      regmbc(0x20d); regmbc(0x20f); regmbc(0x22b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1eb); regmbc(0x1ed); regmbc(0x1ff);", "      regmbc(0x20d); regmbc(0x20f); regmbc(0x22b);", "      regmbc(0x22d); regmbc(0x22f); regmbc(0x231);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x20d); regmbc(0x20f); regmbc(0x22b);", "      regmbc(0x22d); regmbc(0x22f); regmbc(0x231);", "      regmbc(0x275); regmbc(0x1e4d); regmbc(0x1e4f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x22d); regmbc(0x22f); regmbc(0x231);", "      regmbc(0x275); regmbc(0x1e4d); regmbc(0x1e4f);", "      regmbc(0x1e51); regmbc(0x1e53); regmbc(0x1ecd);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x275); regmbc(0x1e4d); regmbc(0x1e4f);", "      regmbc(0x1e51); regmbc(0x1e53); regmbc(0x1ecd);", "      regmbc(0x1ecf); regmbc(0x1ed1); regmbc(0x1ed3);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e51); regmbc(0x1e53); regmbc(0x1ecd);", "      regmbc(0x1ecf); regmbc(0x1ed1); regmbc(0x1ed3);", "      regmbc(0x1ed5); regmbc(0x1ed7); regmbc(0x1ed9);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ecf); regmbc(0x1ed1); regmbc(0x1ed3);", "      regmbc(0x1ed5); regmbc(0x1ed7); regmbc(0x1ed9);", "      regmbc(0x1edb); regmbc(0x1edd); regmbc(0x1edf);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ed5); regmbc(0x1ed7); regmbc(0x1ed9);", "      regmbc(0x1edb); regmbc(0x1edd); regmbc(0x1edf);", "      regmbc(0x1ee1); regmbc(0x1ee3);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1edb); regmbc(0x1edd); regmbc(0x1edf);", "      regmbc(0x1ee1); regmbc(0x1ee3);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e57:", "      regmbc('p'); regmbc(0x1a5); regmbc(0x1d71);", "      regmbc(0x1d7d); regmbc(0x1d88); regmbc(0x1e55);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('p'); regmbc(0x1a5); regmbc(0x1d71);", "      regmbc(0x1d7d); regmbc(0x1d88); regmbc(0x1e55);", "      regmbc(0x1e57);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2a0:", "      regmbc('q'); regmbc(0x24b); regmbc(0x2a0);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a7:", "      regmbc('r'); regmbc(0x155); regmbc(0x157);", "      regmbc(0x159); regmbc(0x211); regmbc(0x213);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('r'); regmbc(0x155); regmbc(0x157);", "      regmbc(0x159); regmbc(0x211); regmbc(0x213);", "      regmbc(0x24d); regmbc(0x1d72); regmbc(0x1d73);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x159); regmbc(0x211); regmbc(0x213);", "      regmbc(0x24d); regmbc(0x1d72); regmbc(0x1d73);", "      regmbc(0x1d89); regmbc(0x1e59); regmbc(0x27d);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x24d); regmbc(0x1d72); regmbc(0x1d73);", "      regmbc(0x1d89); regmbc(0x1e59); regmbc(0x27d);", "      regmbc(0x1e5b); regmbc(0x1e5d); regmbc(0x1e5f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d89); regmbc(0x1e59); regmbc(0x27d);", "      regmbc(0x1e5b); regmbc(0x1e5d); regmbc(0x1e5f);", "      regmbc(0xa7a7);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0xa7a9:", "      regmbc('s'); regmbc(0x15b); regmbc(0x15d);", "      regmbc(0x15f); regmbc(0x161); regmbc(0x23f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('s'); regmbc(0x15b); regmbc(0x15d);", "      regmbc(0x15f); regmbc(0x161); regmbc(0x23f);", "      regmbc(0x219); regmbc(0x1d74); regmbc(0x1d8a);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x15f); regmbc(0x161); regmbc(0x23f);", "      regmbc(0x219); regmbc(0x1d74); regmbc(0x1d8a);", "      regmbc(0x1e61); regmbc(0x1e63); regmbc(0x1e65);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x219); regmbc(0x1d74); regmbc(0x1d8a);", "      regmbc(0x1e61); regmbc(0x1e63); regmbc(0x1e65);", "      regmbc(0x1e67); regmbc(0x1e69); regmbc(0xa7a9);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e61); regmbc(0x1e63); regmbc(0x1e65);", "      regmbc(0x1e67); regmbc(0x1e69); regmbc(0xa7a9);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c66:", "      regmbc('t'); regmbc(0x163); regmbc(0x165);", "      regmbc(0x167); regmbc(0x1ab); regmbc(0x21b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('t'); regmbc(0x163); regmbc(0x165);", "      regmbc(0x167); regmbc(0x1ab); regmbc(0x21b);", "      regmbc(0x1ad); regmbc(0x288); regmbc(0x1d75);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x167); regmbc(0x1ab); regmbc(0x21b);", "      regmbc(0x1ad); regmbc(0x288); regmbc(0x1d75);", "      regmbc(0x1e6b); regmbc(0x1e6d); regmbc(0x1e6f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ad); regmbc(0x288); regmbc(0x1d75);", "      regmbc(0x1e6b); regmbc(0x1e6d); regmbc(0x1e6f);", "      regmbc(0x1e71); regmbc(0x1e97); regmbc(0x2c66);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e6b); regmbc(0x1e6d); regmbc(0x1e6f);", "      regmbc(0x1e71); regmbc(0x1e97); regmbc(0x2c66);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ef1:", "      regmbc('u'); regmbc(0xf9); regmbc(0xfa);", "      regmbc(0xfb); regmbc(0xfc); regmbc(0x169);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('u'); regmbc(0xf9); regmbc(0xfa);", "      regmbc(0xfb); regmbc(0xfc); regmbc(0x169);", "      regmbc(0x16b); regmbc(0x16d); regmbc(0x16f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0xfb); regmbc(0xfc); regmbc(0x169);", "      regmbc(0x16b); regmbc(0x16d); regmbc(0x16f);", "      regmbc(0x171); regmbc(0x173); regmbc(0x1d6);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x16b); regmbc(0x16d); regmbc(0x16f);", "      regmbc(0x171); regmbc(0x173); regmbc(0x1d6);", "      regmbc(0x1d8); regmbc(0x1da); regmbc(0x1dc);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x171); regmbc(0x173); regmbc(0x1d6);", "      regmbc(0x1d8); regmbc(0x1da); regmbc(0x1dc);", "      regmbc(0x215); regmbc(0x217); regmbc(0x1b0);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d8); regmbc(0x1da); regmbc(0x1dc);", "      regmbc(0x215); regmbc(0x217); regmbc(0x1b0);", "      regmbc(0x1d4); regmbc(0x289); regmbc(0x1d7e);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x215); regmbc(0x217); regmbc(0x1b0);", "      regmbc(0x1d4); regmbc(0x289); regmbc(0x1d7e);", "      regmbc(0x1d99); regmbc(0x1e73); regmbc(0x1e75);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d4); regmbc(0x289); regmbc(0x1d7e);", "      regmbc(0x1d99); regmbc(0x1e73); regmbc(0x1e75);", "      regmbc(0x1e77); regmbc(0x1e79); regmbc(0x1e7b);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d99); regmbc(0x1e73); regmbc(0x1e75);", "      regmbc(0x1e77); regmbc(0x1e79); regmbc(0x1e7b);", "      regmbc(0x1ee5); regmbc(0x1ee7); regmbc(0x1ee9);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e77); regmbc(0x1e79); regmbc(0x1e7b);", "      regmbc(0x1ee5); regmbc(0x1ee7); regmbc(0x1ee9);", "      regmbc(0x1eeb); regmbc(0x1eed); regmbc(0x1eef);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1ee5); regmbc(0x1ee7); regmbc(0x1ee9);", "      regmbc(0x1eeb); regmbc(0x1eed); regmbc(0x1eef);", "      regmbc(0x1ef1);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e7f:", "      regmbc('v'); regmbc(0x28b); regmbc(0x1d8c);", "      regmbc(0x1e7d); regmbc(0x1e7f);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('v'); regmbc(0x28b); regmbc(0x1d8c);", "      regmbc(0x1e7d); regmbc(0x1e7f);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e98:", "      regmbc('w'); regmbc(0x175); regmbc(0x1e81);", "      regmbc(0x1e83); regmbc(0x1e85); regmbc(0x1e87);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('w'); regmbc(0x175); regmbc(0x1e81);", "      regmbc(0x1e83); regmbc(0x1e85); regmbc(0x1e87);", "      regmbc(0x1e89); regmbc(0x1e98);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1e83); regmbc(0x1e85); regmbc(0x1e87);", "      regmbc(0x1e89); regmbc(0x1e98);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1e8d:", "      regmbc('x'); regmbc(0x1e8b); regmbc(0x1e8d);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x1ef9:", "      regmbc('y'); regmbc(0xfd); regmbc(0xff);", "      regmbc(0x177); regmbc(0x1b4); regmbc(0x233);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('y'); regmbc(0xfd); regmbc(0xff);", "      regmbc(0x177); regmbc(0x1b4); regmbc(0x233);", "      regmbc(0x24f); regmbc(0x1e8f); regmbc(0x1e99);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x177); regmbc(0x1b4); regmbc(0x233);", "      regmbc(0x24f); regmbc(0x1e8f); regmbc(0x1e99);", "      regmbc(0x1ef3); regmbc(0x1ef5); regmbc(0x1ef7);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x24f); regmbc(0x1e8f); regmbc(0x1e99);", "      regmbc(0x1ef3); regmbc(0x1ef5); regmbc(0x1ef7);", "      regmbc(0x1ef9);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case 0x2c6c:", "      regmbc('z'); regmbc(0x17a); regmbc(0x17c);", "      regmbc(0x17e); regmbc(0x1b6); regmbc(0x1d76);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc('z'); regmbc(0x17a); regmbc(0x17c);", "      regmbc(0x17e); regmbc(0x1b6); regmbc(0x1d76);", "      regmbc(0x1d8e); regmbc(0x1e91); regmbc(0x1e93);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x17e); regmbc(0x1b6); regmbc(0x1d76);", "      regmbc(0x1d8e); regmbc(0x1e91); regmbc(0x1e93);", "      regmbc(0x1e95); regmbc(0x2c6c);"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      regmbc(0x1d8e); regmbc(0x1e91); regmbc(0x1e93);", "      regmbc(0x1e95); regmbc(0x2c6c);", "      return;"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["", "/*", " * Emit a node."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Write a four bytes number at \"p\" and return pointer to the next char."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * regnext - dig the \"next\" pointer out of a node"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Like regtail, on item after a BRANCH; nop if none."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Insert an operator in front of already-emitted operand"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Insert an operator in front of already-emitted operand."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Insert an operator in front of already-emitted operand."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Parse the lowest level."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["      case 'd':", "        i = getdecchrs(); break;", "      case 'o':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      case 'o':", "        i = getoctchrs(); break;", "      case 'x':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      case 'x':", "        i = gethexchrs(2); break;", "      case 'u':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      case 'u':", "        i = gethexchrs(4); break;", "      case 'U':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      case 'U':", "        i = gethexchrs(8); break;", "      default:"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      default:", "        i = -1; break;", "      }"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["          if (*regparse == '-') {", "            ++regparse;", "            // The '-' is not used for a range at the end and"], "readability/increment"]
["src/nvim/regexp_bt.c", ["          // 'cpoptions' is not included.", "          else if (*regparse == '\\\\'", "                   && (vim_strchr(REGEXP_INRANGE, regparse[1]) != NULL"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["              } else if ((c_class =", "                            get_coll_element(&regparse)) != 0) {", "                // produce a collating element"], "whitespace/alignment"]
["src/nvim/regexp_bt.c", ["                                   && !one_exactly", "                                   && !is_Magic(c))); ++len) {", "      c = no_Magic(c);"], "readability/increment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Parse something followed by possible [*+=]."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["    case '=':", "      lop = MATCH; break;                                 // \\@=", "    case '!':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case '!':", "      lop = NOMATCH; break;                               // \\@!", "    case '>':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["    case '>':", "      lop = SUBPAT; break;                                // \\@>", "    case '<':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      case '=':", "        lop = BEHIND; break;                               // \\@<=", "      case '!':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      case '!':", "        lop = NOBEHIND; break;                             // \\@<!", "      }"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["      reginsert_limits(BRACE_LIMITS, minval, maxval, ret);", "      ++num_complex_braces;", "    }"], "readability/increment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Parse one alternative of an | or & operator."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Parse one alternative of an | operator."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["    parno = regnpar;", "    ++regnpar;", "    ret = regnode(MOPEN + parno);"], "readability/increment"]
["src/nvim/regexp_bt.c", ["", "/*", " * bt_regcomp() - compile a regular expression into internal code for the"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Check if during the previous call to vim_regcomp the EOL item \"$\" has been"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Get a number after a backslash that is inside []."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["  case 'd':", "    nr = getdecchrs(); break;", "  case 'o':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["  case 'o':", "    nr = getoctchrs(); break;", "  case 'x':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["  case 'x':", "    nr = gethexchrs(2); break;", "  case 'u':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["  case 'u':", "    nr = gethexchrs(4); break;", "  case 'U':"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["  case 'U':", "    nr = gethexchrs(8); break;", "  }"], "whitespace/newline"]
["src/nvim/regexp_bt.c", ["", "/*", " * Free a compiled regexp program, returned by bt_regcomp()."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * The arguments from BRACE_LIMITS are stored here.  They are actually local"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Tentatively set the sub-expression start to the current position (after"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["      }", "      ++count;", "    }"], "readability/increment"]
["src/nvim/regexp_bt.c", ["      }", "      ++count;", "    }"], "readability/increment"]
["src/nvim/regexp_bt.c", ["        scan += len;", "        ++count;", "      }"], "readability/increment"]
["src/nvim/regexp_bt.c", ["      }", "      ++count;", "    }"], "readability/increment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Push an item onto the regstack."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Pop an item from the regstack."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["          no = op - BRACE_COMPLEX;", "          ++brace_count[no];", ""], "readability/increment"]
["src/nvim/regexp_bt.c", ["          reg_restore(&rp->rs_un.regsave, &backpos);", "          --brace_count[rp->rs_no];             // decrement match count", "        }"], "readability/increment"]
["src/nvim/regexp_bt.c", ["          reg_restore(&rp->rs_un.regsave, &backpos);", "          --brace_count[rp->rs_no];", "          // continue with the items after \"\\{}\""], "readability/increment"]
["src/nvim/regexp_bt.c", ["", "/*", " * Compare a number with the operand of RE_LNUM, RE_COL or RE_VCOL."], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * regdump - dump a regexp onto stdout in vaguely comprehensible form"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["", "/*", " * regprop - printable representation of opcode"], "readability/old_style_comment"]
["src/nvim/regexp_bt.c", ["  case MOPEN + 9:", "    sprintf(buf + STRLEN(buf), \"MOPEN%d\", OP(op) - MOPEN);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  case MCLOSE + 9:", "    sprintf(buf + STRLEN(buf), \"MCLOSE%d\", OP(op) - MCLOSE);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  case BACKREF + 9:", "    sprintf(buf + STRLEN(buf), \"BACKREF%d\", OP(op) - BACKREF);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  case ZOPEN + 9:", "    sprintf(buf + STRLEN(buf), \"ZOPEN%d\", OP(op) - ZOPEN);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  case ZCLOSE + 9:", "    sprintf(buf + STRLEN(buf), \"ZCLOSE%d\", OP(op) - ZCLOSE);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  case ZREF + 9:", "    sprintf(buf + STRLEN(buf), \"ZREF%d\", OP(op) - ZREF);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  case BRACE_COMPLEX + 9:", "    sprintf(buf + STRLEN(buf), \"BRACE_COMPLEX%d\", OP(op) - BRACE_COMPLEX);", "    p = NULL;"], "runtime/printf"]
["src/nvim/regexp_bt.c", ["  default:", "    sprintf(buf + STRLEN(buf), \"corrupt %d\", OP(op));", "    p = NULL;"], "runtime/printf"]
